{"version":3,"sources":["draw_node.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/scripts","sourcesContent":["import PixelUtil from \"./utils/PixelUtil\";\n\n/**\n * 画板\n */\n\nconst {\n    ccclass,\n    property\n} = cc._decorator;\n\n//目标图像尺寸\nconst judgeSize = new cc.Size(28, 28);\n\n@ccclass\nexport default class DrawNode extends cc.Component {\n\n    //预览node\n    @property(cc.Node)\n    private priviewNode: cc.Node = null;\n\n    //截图camera\n    @property(cc.Camera)\n    private camera: cc.Camera = null;\n\n    //绘图组件\n    private graphics: cc.Graphics = null;\n\n    private renderTexture: cc.RenderTexture = null;\n\n    private _pixelsData = null;\n\n    onLoad() {\n        this.initPaintbrush();\n        this.setTouchCtrl();\n    }\n\n    /**\n     * 初始化画笔属性\n     */\n    initPaintbrush() {\n        //graphics\n        this.graphics = this.node.getComponent(cc.Graphics);\n        //画笔颜色\n        this.graphics.strokeColor = cc.color(255, 255, 255);\n        //画笔粗细\n        this.graphics.lineWidth = 18;\n        //交点样式\n        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\n        //结束点样式\n        this.graphics.lineCap = cc.Graphics.LineCap.ROUND;\n        //填充黑色背景\n        this.fillBackgroundColor();\n    }\n\n    fillBackgroundColor() {\n        //填充黑色背景\n        let pos = this.node.convertToWorldSpace(cc.v2(0, 0));\n        let origin = this.node.convertToNodeSpaceAR(pos);\n        this.graphics.fillColor = new cc.Color(0, 0, 0);\n        this.graphics.fillRect(origin.x, origin.y, this.node.width, this.node.width);\n    }\n\n    /**\n     * 绘制完成后\n     */\n    onFinishDraw() {\n        let size = this.node.getContentSize();\n        let width = size.width;\n        let height = size.height;\n        let renderTexture = this.screenshot();\n\n        let pixelsData = PixelUtil.filpYImage(renderTexture.readPixels(), size);\n        renderTexture.destroy();\n        renderTexture = this.renderTexture = new cc.RenderTexture();\n        this.renderTexture.initWithData(pixelsData, cc.Texture2D.PixelFormat.RGBA8888, width, height);\n\n        //更新预览图\n        this.priviewNode.width = width / 2;\n        this.priviewNode.height = height / 2;\n        this.priviewNode.active = true;\n        this.priviewNode.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(renderTexture);\n        this._pixelsData = pixelsData;\n\n        //FIXME: DEBUG\n\n        let scalePixels = PixelUtil.scalePixels(this._pixelsData, this.node.getContentSize());\n        // width = 28,height = 28;\n\n        // {\n        //     let str = '';\n        //     let j = 0;\n        //     for (let i = 0; i < this._pixelsData.length; i+=4) {\n        //         str += this._pixelsData[i] + ' '\n        //         if(j >= width * 4){\n        //             console.log(str + new Date().getTime() + Math.random());\n        //             j = 0;\n        //             str = '';\n        //         }\n        //         ++j;\n        //     }\n        // }\n        // for(let i = 0;i<height;++i){\n        //     let str = '';\n        //     for(let j = 0;j<width*4;j+=4){\n        //         str+= scalePixels[i * width * 4 + j] + ' ';\n        //     }\n        //     console.log(str + new Date().getTime() + Math.random());\n        // }\n    }\n\n    getPixelsData() {\n        return PixelUtil.scalePixels(this._pixelsData, this.node.getContentSize())\n    }\n\n    //截图\n    screenshot(): cc.RenderTexture {\n        let width = this.node.width;\n        let height = this.node.height;\n        this.camera.node.active = true;\n        if (this.renderTexture != null) {\n            this.renderTexture.destroy();\n        }\n        // 截图\n        let defaultTexture = new cc.RenderTexture();\n        defaultTexture.initWithSize(width, height);\n\n        this.camera.targetTexture = defaultTexture;\n        this.camera.render(null);\n        this.camera.node.active = false;\n\n        return this.renderTexture = defaultTexture;\n    }\n\n    //清屏按钮回调\n    callbackCleanStroke() {\n        this.graphics.clear();\n        this.fillBackgroundColor();\n        this.onFinishDraw();\n    }\n\n    /**********************************  触摸相关  **************************************/\n\n    setTouchCtrl() {\n        this.node.on(cc.Node.EventType.TOUCH_START.toString(), this.onTouchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE.toString(), this.onTouchMove, this);\n        this.node.on(cc.Node.EventType.TOUCH_END.toString(), this.onTouchEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL.toString(), this.onTouchCancel, this);\n    }\n\n    /**\n     * 触摸点限制在触摸区域内\n     * @param rect 区域\n     * @param loc 触摸点\n     */\n    resetTouchPoint(rect: cc.Rect, loc: cc.Vec2): cc.Vec2 {\n        if (!rect.contains(loc)) {\n            if (loc.x < rect.x) loc.x = rect.x;\n            else if (loc.x > rect.x + rect.width) loc.x = rect.x + rect.width;\n\n            if (loc.y < rect.y) loc.y = rect.y;\n            else if (loc.y > rect.y + rect.height) loc.y = rect.y + rect.height;\n        }\n        return loc;\n    }\n\n    onTouchStart(eventTouch: cc.Touch) {\n        let loc = this.node.convertToNodeSpaceAR(eventTouch.getLocation());\n\n        this.graphics.moveTo(loc.x, loc.y);\n        this.graphics.lineTo(loc.x, loc.y);\n        this.graphics.stroke();\n    }\n\n    onTouchMove(eventTouch: cc.Touch) {\n        let loc = this.node.convertToNodeSpaceAR(eventTouch.getLocation());\n        let rect = this.node.getBoundingBox();\n\n        let pos = this.node.convertToWorldSpace(cc.v2(0, 0));\n        let origin = this.node.convertToNodeSpaceAR(pos);\n        rect.x = origin.x;\n        rect.y = origin.y;\n\n        //设置边界\n        if (!rect.contains(loc)) {\n            loc = this.resetTouchPoint(rect, loc);\n        }\n\n        let previousLocation = this.resetTouchPoint(rect, this.node.convertToNodeSpaceAR(eventTouch.getPreviousLocation()));\n        this.graphics.moveTo(previousLocation.x, previousLocation.y);\n        this.graphics.lineTo(loc.x, loc.y);\n        this.graphics.stroke();\n    }\n\n    onTouchEnd(eventTouch: cc.Touch) {\n        let loc = this.node.convertToNodeSpaceAR(eventTouch.getLocation());\n        this.graphics.moveTo(loc.x, loc.y);\n        this.graphics.lineTo(loc.x, loc.y);\n        this.graphics.stroke();\n        //触摸结束后调用\n        this.onFinishDraw();\n    }\n\n    onTouchCancel(eventTouch: cc.Touch) {\n        let loc = this.node.convertToNodeSpaceAR(eventTouch.getLocation());\n        this.graphics.moveTo(loc.x, loc.y);\n        this.graphics.lineTo(loc.x, loc.y);\n        this.graphics.stroke();\n        //触摸结束后调用\n        this.onFinishDraw();\n    }\n}"]}