{"id":"node_modules/vega-lite/build/src/spec/unit.js","dependencies":[{"name":"/Users/tugame/Desktop/tfjs-examples/mnist/node_modules/vega-lite/build/src/spec/unit.js.map","includedInParent":true,"mtime":1560498793091},{"name":"/Users/tugame/Desktop/tfjs-examples/mnist/package.json","includedInParent":true,"mtime":1560587310618},{"name":"/Users/tugame/Desktop/tfjs-examples/mnist/.babelrc","includedInParent":true,"mtime":1560587310617},{"name":"/Users/tugame/Desktop/tfjs-examples/mnist/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1560498793091},{"name":"../normalize","loc":{"line":1,"column":51},"parent":"/Users/tugame/Desktop/tfjs-examples/mnist/node_modules/vega-lite/build/src/spec/unit.js","resolved":"/Users/tugame/Desktop/tfjs-examples/mnist/node_modules/vega-lite/build/src/normalize.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUnitSpec = isUnitSpec;\nObject.defineProperty(exports, \"normalize\", {\n  enumerable: true,\n  get: function () {\n    return _normalize.normalizeTopLevelSpec;\n  }\n});\n\nvar _normalize = require(\"../normalize\");\n\nfunction isUnitSpec(spec) {\n  return !!spec['mark'];\n}","map":{"mappings":[{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":16,"column":0}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":16,"column":9}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":16,"column":19}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":54,"column":27},"generated":{"line":16,"column":20}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":16,"column":24}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":54,"column":41},"generated":{"line":16,"column":26}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":17,"column":0}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":17,"column":9}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":55,"column":10},"generated":{"line":17,"column":10}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":55,"column":11},"generated":{"line":17,"column":11}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":17,"column":15}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":55,"column":16},"generated":{"line":17,"column":16}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":17,"column":22}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":17,"column":23}},{"source":"../../../src/spec/unit.ts","name":null,"original":{"line":56,"column":1},"generated":{"line":18,"column":0}}],"sources":{"../../../src/spec/unit.ts":"import {Encoding, EncodingWithFacet} from '../encoding';\nimport {RepeatRef} from '../fielddef';\nimport {AnyMark, Mark, MarkDef} from '../mark';\nimport {Projection} from '../projection';\nimport {SelectionDef} from '../selection';\nimport {BaseSpec, LayoutSizeMixins} from './base';\n\nexport {normalizeTopLevelSpec as normalize} from '../normalize';\nexport {BaseSpec, DataMixins, LayoutSizeMixins} from './base';\nexport {TopLevel} from './toplevel';\n\n/**\n * Base interface for a unit (single-view) specification.\n */\nexport interface GenericUnitSpec<E extends Encoding<any>, M> extends BaseSpec, LayoutSizeMixins {\n  /**\n   * A string describing the mark type (one of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\n   * `\"area\"`, `\"point\"`, `\"rule\"`, `\"geoshape\"`, and `\"text\"`) or a [mark definition object](https://vega.github.io/vega-lite/docs/mark.html#mark-def).\n   */\n  mark: M;\n\n  /**\n   * A key-value mapping between encoding channels and definition of fields.\n   */\n  encoding?: E;\n\n  /**\n   * An object defining properties of geographic projection, which will be applied to `shape` path for `\"geoshape\"` marks\n   * and to `latitude` and `\"longitude\"` channels for other marks.\n   */\n  projection?: Projection;\n\n  /**\n   * A key-value mapping between selection names and definitions.\n   */\n  selection?: {[name: string]: SelectionDef};\n}\n\n/**\n * A unit specification without any shortcut/expansion syntax.\n */\nexport type NormalizedUnitSpec = GenericUnitSpec<Encoding<string | RepeatRef>, Mark | MarkDef>;\n\n/**\n * Unit spec that can have a composite mark.\n */\nexport type CompositeUnitSpec = GenericUnitSpec<Encoding<string | RepeatRef>, AnyMark>;\n\n/**\n * Unit spec that can have a composite mark and row or column channels.\n */\nexport type FacetedCompositeUnitSpec = GenericUnitSpec<EncodingWithFacet<string | RepeatRef>, AnyMark>;\n\nexport function isUnitSpec(spec: BaseSpec): spec is FacetedCompositeUnitSpec | NormalizedUnitSpec {\n  return !!spec['mark'];\n}\n"},"lineCount":null}},"hash":"6fdd5fd6edc5cbedeca29cd9faca6114","cacheData":{"env":{}}}